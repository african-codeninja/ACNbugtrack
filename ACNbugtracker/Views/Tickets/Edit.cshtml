@model ACNbugtracker.Models.Ticket

@{
    ViewBag.Title = "TICKET EDIT AND ASSIGNMENT";
}
    <div class="col-12">
        <div class="col-lg-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-header">
                        <strong>TICKET EDIT</strong>
                        @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                        {
                            <small>TICKET ASSIGNMENT</small>
                        }
                    </div>
                    <div class="card-body card-block">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProjectId, "PROJECT", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "TICKET TYPE", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "TICKET PRIORITY", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("TicketPriorityId", null, "--Select New Priority--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                        @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.TicketStatusId, "TICKET STATUS", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("TicketStatusId", null, "--Select New status--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignedToUserId, "TICKET ASSIGNMENT", htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.DropDownList("AssignedToUserId", null, "--Assign ticket--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, "TICKET TITLE", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "TICKET DESCRIPTION", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        <div>
            @Html.ActionLink("Back to List", "Index")
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
        </div>            
        </div>       
    </div>
    

        
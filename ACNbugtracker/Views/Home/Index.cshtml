﻿@using ACNbugtracker.Models;
@using ACNbugtracker.Helper;
@using Microsoft.AspNet.Identity

@model IEnumerable<UserProfileViewModel>
@{
    var roleHelper = new UserRolesHelper();
}


<div class="breadcrumbs">
    <div class="col-sm-4">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>AFRICAN CODE NINJAS : DASHBOARD</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-8">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right">
                    <!--Removed some links here-->
                </ol>
            </div>
        </div>
    </div>
</div>
<!--Counting All tickets for Admin and My Ticket for partcular User-->
<div class="col-lg-6">

    <div class="card">
        <div class="card-body">
            <div class="stat-widget-one">
                <div class="stat-icon dib"><i class="ti-layout-grid2 text-warning border-warning"></i></div>
                <div class="stat-content dib">

                    <div class="stats-info">
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="stat-text"><h4>TOTAL TICKETS</h4></div>
                        }
                        else
                        {
                            <h4>MY TICKETS</h4>
                        }
                        @{
                            var db = new ApplicationDbContext();
                            var ticketHelper = new TicketHelper();
                            var user = User.Identity.GetUserId();
                            <p>@ticketHelper.CountMyTickets(user)</p>
                        }
                    </div>
                    <div class="stats-link">
                        <a href="@Url.Action("MyIndex", "Tickets")">View Detail <i class="fa fa-arrow-alt-circle-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<!--Counting All IMMEDIATE tickets for Admin and My Ticket for partcular User-->
<div class="col-lg-6">

    <div class="card">
        <div class="card-body">
            <div class="stat-widget-one">
                <div class="stat-icon dib"><i class="ti-link text-danger border-danger"></i></div>
                <div class="stat-content dib">

                    <div class="stats-info">
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="stat-text"><h4>TOTAL IMMEDIATE TICKETS</h4></div>
                        }
                        else
                        {
                            <h4>MY IMMEDIATE TICKETS</h4>
                        }
                        @{
                            var db1 = new ApplicationDbContext();
                            var ticketHelper1 = new TicketHelper();
                            var user1 = User.Identity.GetUserId();
                            <p>@ticketHelper.CountMyImmediateTickets(user)</p>
                        }
                        <br />

                    </div>

                </div>
            </div>
        </div>
    </div>

</div>
<style>

    .chart275 {
        height: 275px;
    }
</style>

<div class="col-md-12">

    <div class="card">
        <div class="card-header bg-secondary">
            <strong class="card-title text-light"><h2>The Bug tracker</h2></strong>
        </div>
        <div class="card-body text-white bg-dark">
            <p class="card-text text-light">
                <h3>
                    Fully designed and developed a multi-functional issue tracker web application,
                    implementing enhanced roles & security, which also used a Code First Relational
                    database designed and modeled in SQL Server. Technologies used include: .Net
                    Framework v. 4.6.1, MVC5, C#, LINQ, SQL, Entity Framework, jQuery DataTables
                </h3>
            </p>
        </div>
    </div>

</div>

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3D Bar Chart</h4>
            <div id="Fusion3dBarChartType" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3D Pie Chart </h4>
            <div id="Fusion3dPieChartType" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3D BarChart: Tickets By Type</h4>
            <div id="Fusion3dBarChart" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3d Pie Chart: Ticket Count</h4>
            <div id="Fusion3dPieChart" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3D BarChart: Roles Assigned</h4>
            <div id="Fusion3dBarChartUsers" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->

<div class="col-lg-6">
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">3d Pie Chart: Ticket Count</h4>
            <div id="Fusion3dPieChartUsers" class="chart275"></div>
        </div>
    </div>
</div><!-- /# column -->


@section scripts{

    <script type="text/javascript">
           $(function(){
                var url='@Url.Action("GetJsonMorrisData","Charts")';
               $.post(url).then(function(response){
                    new Morris.Bar({
                        element:'RealMorrisBarChart',
                        data: response,
                        gridTextSize: 10,
                        xLabelAngle: 65,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['Ticket Count'],
                        resize: true
                    });
                });
           });
    </script>

    <script type="text/javascript">
           $(function(){
                var url='@Url.Action("GetJsonMorrisData","Charts")';
                $.post(url).then(function(response){
                    new Morris.Donut({
                        element:'RealMorrisDonutChart',
                        data: response,
                        gridTextSize: 10,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['Ticket Count'],
                        resize: true
                    });
                });
            });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionData","Charts")';
         $.post(url).then(function(response){
             var revenueChart = new FusionCharts({
                 type:'column3d',
                 renderAt:'Fusion3dBarChart',
                 width:'100%',
                 height:'100%',
                 dataFormat:'json',
                 dataSource:{
                     'chart':{
                         caption:'Ticket Counts by Type',
                         subCaption:'',
                         xAxisName:'Ticket Types',
                         yAxisName:'Count',
                         numberSuffix:'',
                         theme:'fusion'
                     },
                     'data': response
                 }
             }).render();
         });
      });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionData","Charts")';
         $.post(url).then(function(response){
             var ticketChart = new FusionCharts({
                 type:"pie3d",
                 renderAt:"Fusion3dPieChart",
                 width:"100%",
                 height:"100%",
                 dataFormat:"json",
                 dataSource:{
                     "chart":{
                         caption:"Ticket Counts by Type",
                         subCaption:"",
                         xAxisName:"Ticket Statuses",
                         yAxisName:"Count",
                         numberSuffix:"",
                         theme:"fusion"
                     },
                     "data": response
                 }
             }).render();
         });
      });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionDataTypes","Charts")';
         $.post(url).then(function(response){
             var revenueChart = new FusionCharts({
                 type:'column3d',
                 renderAt:'Fusion3dBarChartType',
                 width:'100%',
                 height:'100%',
                 dataFormat:'json',
                 dataSource:{
                     'chart':{
                         caption:'Ticket Counts by Status',
                         subCaption:'',
                         xAxisName:'Status',
                         yAxisName:'Count',
                         numberSuffix:'',
                         theme:'fusion'
                     },
                     'data': response
                 }
             }).render();
         });
      });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionDataTypes","Charts")';
         $.post(url).then(function(response){
             var ticketChart = new FusionCharts({
                 type:"pie3d",
                 renderAt:"Fusion3dPieChartType",
                 width:"100%",
                 height:"100%",
                 dataFormat:"json",
                 dataSource:{
                     "chart":{
                         caption:"Ticket Counts by Status",
                         subCaption:"",
                         xAxisName:"Status",
                         yAxisName:"Count",
                         numberSuffix:"",
                         theme:"fusion"
                     },
                     "data": response
                 }
             }).render();
         });
      });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionProjectUsers","Charts")';
         $.post(url).then(function(response){
             var revenueChart = new FusionCharts({
                 type:'column3d',
                 renderAt:'Fusion3dBarChartUsers',
                 width:'100%',
                 height:'100%',
                 dataFormat:'json',
                 dataSource:{
                     'chart':{
                         caption:'Personel to Projects',
                         subCaption:'',
                         xAxisName:'Projects',
                         yAxisName:'People Assigned',
                         numberSuffix:'',
                         theme:'fusion'
                     },
                     'data': response
                 }
             }).render();
         });
      });
    </script>

    <script>
      $(function(){
         var url='@Url.Action("GetJsonFusionDataRoles","Charts")';
         $.post(url).then(function(response){
             var ticketChart = new FusionCharts({
                 type:"pie3d",
                 renderAt:"Fusion3dPieChartUsers",
                 width:"100%",
                 height:"100%",
                 dataFormat:"json",
                 dataSource:{
                     "chart":{
                         caption:"Types of Roles",
                         subCaption:"",
                         xAxisName:"Roles",
                         yAxisName:"People Assigned",
                         numberSuffix:"",
                         theme:"fusion"
                     },
                     "data": response
                 }
             }).render();
         });
      });
    </script>


}